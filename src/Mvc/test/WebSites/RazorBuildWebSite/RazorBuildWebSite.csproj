<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFrameworks>$(StandardTestWebsiteTfms)</TargetFrameworks>
    <DefineConstants>$(DefineConstants)</DefineConstants>
    <!-- We have tests that test runtime view compilation. -->
    <RazorCompileOnBuild>false</RazorCompileOnBuild>
    <IsTestAssetProject>true</IsTestAssetProject>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="Microsoft.AspNetCore.Mvc" />

    <!-- Faking like we had Razor-on-Build (Rzc) and MvcPrecompilation -->
    <ProjectReference Include="..\RazorBuildWebSite.PrecompiledViews\RazorBuildWebSite.PrecompiledViews.csproj" />
    <ProjectReference Include="..\RazorBuildWebSite.Views\RazorBuildWebSite.Views.csproj" />

    <Reference Include="Microsoft.AspNetCore.Server.IISIntegration" />
    <Reference Include="Microsoft.AspNetCore.Server.Kestrel" />
    <Reference Include="Microsoft.AspNetCore.StaticFiles" />
    <Reference Include="Microsoft.AspNetCore.Diagnostics" />

    <!--
      Referencing here so you can easily regenerate the C# from Razor.
      Just do `dotnet build /t:RazorGenerate /p:TargetFramework=netcoreapp2.0` and look in obj/Debug/netcoreapp2.0/Razor
      -->
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="$(MicrosoftAspNetCoreRazorDesignPackageVersion)" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.Extensions" Version="$(MicrosoftAspNetCoreMvcRazorExtensionsPackageVersion)" />
    <PackageReference Include="Microsoft.NET.Sdk.Razor" Version="$(MicrosoftNETSdkRazorPackageVersion)" PrivateAssets="All" />
  </ItemGroup>

</Project>
